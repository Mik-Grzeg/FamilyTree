name: Build and Test

on: [push, pull_request]

env:
  IMAGE_REG: famtree.azurecr.io/family-tree
  DOCKER_BUILDKIT: 1
  COMPOSE_DOCKER_CLI_BUILD: 1


jobs:

  backend-unit-test:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2
    - name: Install minimal stable with clippy and rustfmt
      uses: actions-rs/toolchain@v1
      with:
        profile: minimal
        toolchain: stable
        components: rustfmt, clippy
    - name: Rust Cache
      uses: Swatinem/rust-cache@v1.3.0
      with:
        working-directory: ./fam_tree_rest_api

    - name: Build
      working-directory: ./fam_tree_rest_api
      run: cargo build --verbose

    - name: Lint check
      working-directory: ./fam_tree_rest_api
      run: |
        cargo fmt -- --check
        cargo clippy --all-targets -- -A warnings

    - name: Run tests
      working-directory: ./fam_tree_rest_api
      run: cargo test --verbose

  frontend-unit-test:
    runs-on: ubuntu-latest
    defaults:
      run:
        working-directory: ./frontend

    steps:
    - uses: actions/checkout@v2
    - uses: actions/setup-node@v2
      with:
        node-version: '16'
        cache: 'npm'
        cache-dependency-path: ./frontend/package-lock.json
    - run: npm install
    - run: npm run test

  build:
    needs: [frontend-unit-test, backend-unit-test]

    name: Build Docker Images
    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Login to ACR
      uses: docker/login-action@v1
      with:
        registry: famtree.azurecr.io
        username: ${{ secrets.REGISTRY_USER }}
        password: ${{ secrets.REGISTRY_PASS }}

    - name: Build genealogy api builder
      working-directory: ./fam_tree_rest_api
      run: |
        docker build \
        --target builder \
        --cache-from $IMAGE_REG-builder:1.0.0 \
        --tag $IMAGE_REG-builder:1.0.0 \
        --build-arg BUILDKIT_INLINE_CACHE=1 \
        .

    - name: Build auth api builder
      working-directory: ./auth
      run: |
        docker build \
        --target builder \
        --cache-from $IMAGE_REG-auth_builder:1.0.0 \
        --tag $IMAGE_REG-auth_builder:1.0.0 \
        --build-arg BUILDKIT_INLINE_CACHE=1 \
        .
    - name: Setup infrastructure
      run: |
        docker-compose build --build-arg BUILDKIT_INLINE_CACHE=1
        docker-compose up -d

    - name: Run Cypress tests
      uses: cypress-io/github-action@v2
      with:
        working-directory: ./frontend
        command: npm run cypress:run

    - name: Setup python for intergration tests
      uses: actions/setup-python@v2
      with:
        python-version: "3.x"

    - name: Run integration tests
      run: |
        python -m pip install --upgrade pip
        pip install -r integration_tests/requirements.txt
        python -m pytest integration_tests --docker-compose=docker-compose.yaml --docker-compose-no-build --use-running-containers

    - name: Push images to acr
      if: github.event_name == 'pull_request' && github.event.action == 'closed' && github.event.pull_request.merged == true
      run: |
        docker push $IMAGE_REG-builder:1.0.0
        docker push $IMAGE_REG-auth_builder:1.0.0
        docker-compose push
